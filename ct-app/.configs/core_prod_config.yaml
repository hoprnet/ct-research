---
# =============================================================================
# 
# =============================================================================
flags:
  core: 
    applyEconomicModel: 30
    ticketParameters: 60

    connectedPeers: 30
    topology: 30

    rotateSubgraphs: 60

    peersRewards: 300
    registeredNodes: 300
    allocations: 300
    EOABalances: 300
    NFTHolders: 300
    safeFundings: 300
    
  node:
    healthcheck: 15
    retrievePeers: 60
    retrieveChannels: 120
    retrieveBalances: 300

    openChannels: 300
    fundChannels: 300
    closeOldChannels: 300
    closePendingChannels: 300
    closeIncomingChannels: Off

    getTotalChannelFunds: 300
    
    observeMessageQueue: On # should only be On / Off
    observeRelayedMessages: 15

  peer:
    messageRelayRequest: On # should only be On / Off

# =============================================================================
# 
# =============================================================================
economicModel:
  minSafeAllowance: -1
  NFTThreshold: 30000

  legacy:
    proportion: 1.0
    apr: 12.5

    coefficients:
      a: 1
      b: 1.4
      c: 75000
      l: 10000
    
    equations: 
      fx: 
        formula: "a * x"
        condition: "l <= x <= c"
      gx:
        formula: "a * c + (x - c) ** (1 / b)"
        condition: "x > c"

  sigmoid:
    proportion: 0
    maxAPR: 15
    networkCapacity: 2000
    totalTokenSupply: 450000000

    offset: -0.9
    buckets:
      economicSecurity:
        flatness: 1.8
        skewness: 1.52
        upperbound: 0.4
        offset: 3.14

      networkCapacity:
        flatness: 2.97
        skewness: 0.72
        upperbound: 1.0
        offset: 4.08


# =============================================================================
# 
# =============================================================================
peer:
  minVersion: '2.2.1'
  initialSleep:
    mean: 30
    std: 2

  # Controls how many messages are batched at a time. Increasing this reduces
  # the queue size but also privacy as the load gets less spread over time. 
  # NOTE: Should be replaced by a dynamic approch, by setting the minimum delay
  # acceptable before increasing the batch size accordingly (auto-mode)
  messageMultiplier: 1

# =============================================================================
# 
# =============================================================================
channel:
  minBalance: 20
  fundingAmount: 30
  maxAgeSeconds: 172800
  
# =============================================================================
# 
# =============================================================================
fundings:
  constant: 626500
  
# =============================================================================
# 
# =============================================================================
subgraph:
  type: auto # auto | default | backup
  userID: 78696

  mainnetAllocations:
    queryID: FhU1GxUovoP1zphNbWFEQHwpabLGELQBdWWyFX1yjBkf
    slug: hopr-allocations
    inputs:
      schedule_in:
        - investor-node-remainder-2024-01
  gnosisAllocations:
    queryID: DXy4UwhNms3zm7abYeSYaD3hTkuaWYyNvozrXSXejMbS
    slug: hopr-allocations---gnosis
    inputs:
      schedule_in:
        - investor-node-remainder-2024-01
  hoprOnMainnet:
    queryID: 4GZdwVtPcQp95RF77W27GK2ezgGLB1iintG6mYZQ1w33
    slug: hopr---mainnet
  hoprOnGnosis:
    queryID: 2wMRp1AW1ghxoFiM6WeRD93djHNvNGhXsuQyadmwCyqE
    slug: hopr-on-gnosis
  fundings:
    queryID: EpAdSFzDLT7N5RhA3UxtqGUwkFxmMunSE2yGLb8juQjC
    slug: subgraph-wxhopr-txs
    inputs:
      from: '0xd9a00176cf49dfb9ca3ef61805a2850f45cb1d05'
  rewards:
    queryID: GoJ4KRuYEcELQk42hir2tjau6r1u4ibDFY6t1zH6zpKk
    slug: hopr-channels
  safesBalance:
    queryID: GP2abJCarirMJCanuk4SBmnadiobEWH9ME2MNRAHbBTp
    slug: hopr-nodes-dufour
  staking:
    queryID: F1NZayy7TXRi2szAVXvMFfJuC9uSdNYLUPAb6p6BYRmZ
    slug: hopr-stake-all-seasons
...